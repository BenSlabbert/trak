version: "3.7"

services:

  ######################
  #  TRAK Applications #
  ######################

  engine:
    image: benjaminslabbert/trak_engine:1.0.4-2019-10-24
    environment:
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - JAVA_OPTS=-Xmx64m -Xms64m -XX:+TieredCompilation -Xss256k -Xverify:none -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+CMSClassUnloadingEnabled -XshowSettings:vm -XX:NativeMemoryTracking=summary -XX:+UnlockDiagnosticVMOptions -XX:+PrintNMTStatistics -XX:+HeapDumpOnOutOfMemoryError -noverify
    depends_on:
      - rds
      - rabbit
      - redis
    labels:
      - "description=Trak Engine, create jobs on Rabbit worker queue"
    networks:
      - backend
    stop_grace_period: 1m30s
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  worker:
    image: benjaminslabbert/trak_worker:1.0.4-2019-10-24
    environment:
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - JAVA_OPTS=-Xmx128m -Xms128m -XX:+TieredCompilation -Xss256k -Xverify:none -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+CMSClassUnloadingEnabled -XshowSettings:vm -XX:NativeMemoryTracking=summary -XX:+UnlockDiagnosticVMOptions -XX:+PrintNMTStatistics -XX:+HeapDumpOnOutOfMemoryError -noverify
    depends_on:
      - rds
      - rabbit
      - redis
    labels:
      - "description=Trak Worker, processes events from RabbitMQ"
    networks:
      - backend
    stop_grace_period: 1m30s
    deploy:
      replicas: 3
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  search:
    image: benjaminslabbert/trak_search:1.0.4-2019-10-24
    ports:
      - 50052
    environment:
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - JAVA_OPTS=-Xmx64m -Xms64m -XX:+TieredCompilation -Xss256k -Xverify:none -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+CMSClassUnloadingEnabled -XshowSettings:vm -XX:NativeMemoryTracking=summary -XX:+UnlockDiagnosticVMOptions -XX:+PrintNMTStatistics -XX:+HeapDumpOnOutOfMemoryError -noverify
    depends_on:
      - es
      - redis
    labels:
      - "description=Trak Search, searches on Sonic"
    networks:
      - backend
      - frontend
    stop_grace_period: 1m30s
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  api:
    image: benjaminslabbert/trak_api:1.0.4-2019-10-23
    environment:
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - JAVA_OPTS=-Xmx64m -Xms64m -XX:+TieredCompilation -Xss256k -Xverify:none -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+CMSClassUnloadingEnabled -XshowSettings:vm -XX:NativeMemoryTracking=summary -XX:+UnlockDiagnosticVMOptions -XX:+PrintNMTStatistics -XX:+HeapDumpOnOutOfMemoryError -noverify
    depends_on:
      - rds
      - rabbit
      - redis
    labels:
      - "description=Trak API, API for UI service"
    networks:
      - backend
      - frontend
    stop_grace_period: 1m30s
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  gateway:
    image: benjaminslabbert/trak_gateway:1.0.1-2019-10-24_07-11-48
    ports:
      - 5000:5000
    depends_on:
      - search
      - api
    labels:
      - "description=Trak Gateway, serving ReactJS"
    networks:
      - frontend
    stop_grace_period: 1m30s
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  #####################
  # External Services #
  #####################

  rabbit:
    image: rabbitmq:3.8.0-management-alpine
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=trak
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - 15672:15672
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    networks:
      - backend
    stop_grace_period: 1m30s
    labels:
      - "description=RabbitMQ Service"
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  redis:
    image: redis:5.0.6-alpine
    networks:
      - backend
    stop_grace_period: 1m30s
    volumes:
      - redis-data:/data
    labels:
      - "description=Redis Service"
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  rds:
    image: mariadb:10.4.8-bionic
    volumes:
      - rds-data:/var/lib/mysql
    networks:
      - backend
    environment:
      - MYSQL_ROOT_PASSWORD=my-secret-pw
      - MYSQL_DATABASE=trak
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    stop_grace_period: 1m30s
    labels:
      - "description=Maria DB Relational DB"
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]

  ##############
  # Monitoring #
  ##############

  prometheus:
    image: benjaminslabbert/trak_prometheus:1.0.4-1565000104
    stop_grace_period: 1m30s
    volumes:
      - prometheus-data:/prometheus
    labels:
      - "description=Prometheus to collect metrics"
    networks:
      - frontend
      - backend
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  grafana:
    image: grafana/grafana:6.4.3
    ports:
      - 4000:3000
    stop_grace_period: 1m30s
    environment:
      - "GF_SECURITY_ADMIN_PASSWORD=password"
    volumes:
      - grafana-data:/var/lib/grafana
    labels:
      - "description=Grafana to display metrics"
    networks:
      - frontend
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  agent:
    image: portainer/agent:1.5.1
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      AGENT_PORT: 9001
      LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer:1.22.1
    ports:
      - 9000:9000
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    #    volumes:
    #      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "admin-password=admin123"
    networks:
      - agent_network
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]

networks:
  frontend:
    driver: overlay
  backend:
    driver: overlay
  agent_network:
    driver: overlay
    attachable: true

volumes:
  portainer_data:
  prometheus-data:
  grafana-data:
  rabbit-data:
  redis-data:
  rds-data:
