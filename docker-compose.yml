version: '3.3'

services:

  rabbit:
    image: rabbitmq
    hostname: rabbit
    restart: always
    ports:
      - 5672:5672
    volumes:
      - "rabbit-data:/var/lib/rabbitmq"

  mongo:
    image: mongo
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017

  rds:
    image: mariadb
    restart: always
    ports:
      - 3306:3306
    volumes:
      - "rds-data:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=my-secret-pw
      - MYSQL_DATABASE=trak
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password

  adminer:
    image: adminer
    restart: always
    ports:
      - 8089:8080

  engine:
    build: engine/
    image: benjaminslabbert/trak_engine:0.0.0
    restart: always

  worker:
    build: worker/
    image: benjaminslabbert/trak_worker:0.0.0
    restart: always

  search:
    build: search/
    image: benjaminslabbert/trak_search:0.0.0
    restart: always
    ports:
      - 8081:8080

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.1
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - "es-data:/usr/share/elasticsearch/data"
    environment:
      - "discovery.type=single-node"
      - "transport.host=es"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.1
    restart: always
    ports:
      - 5601:5601
    volumes:
      - "kibana-data:/usr/share/kibana"
    environment:
      SERVER_NAME: kibana.local
      ELASTICSEARCH_URL: http://es:9200
    depends_on:
      - es

  logstash:
    build: ./logstash-conf-local/
    image: benjaminslabbert/trak_logstash:0.0.0
    network_mode: "host"
    ports:
      - 9600:9600
    restart: always
    depends_on:
      - es

volumes:
  rabbit-data:
    driver: local
  rds-data:
    driver: local
  es-data:
    driver: local
  kibana-data:
    driver: local
  mongo-data:
    driver: local

# todo add trak-ui container
